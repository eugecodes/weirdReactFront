import type { Option } from "@/src/common/utils/types";
import type { ClientType } from "@/src/core/app/enums/client_type";
import type { PriceType } from "@/src/core/app/enums/price_type";
import type { EnergyTypes } from "@/src/core/app/enums/energy_types";

export class FilterRateModel {
  marketer?: Option | null;
  name?: string;
  energyType?: EnergyTypes;
  priceType?: PriceType;
  clientTypes?: ClientType[];
  rateType?: Option[];
  permanency?: boolean;
  length?: string;
  isFullRenewable?: boolean;
  compensationSurplus?: boolean;
  compensationSurplusValue?: string;
  minPower?: string;
  maxPower?: string;
  energyPrice1?: string;
  energyPrice2?: string;
  energyPrice3?: string;
  energyPrice4?: string;
  energyPrice5?: string;
  energyPrice6?: string;
  powerPrice1?: string;
  powerPrice2?: string;
  powerPrice3?: string;
  powerPrice4?: string;
  powerPrice5?: string;
  powerPrice6?: string;
  fixedTermPrice?: string;
  enabled?: boolean;
  createdAt?: string;
  responsible?: string;

  constructor(rate: {
    marketer: Option | null;
    name?: string;
    energyType?: EnergyTypes;
    priceType?: PriceType;
    clientTypes?: ClientType[];
    rateType?: Option[];
    permanency?: boolean;
    length?: string;
    isFullRenewable?: boolean;
    compensationSurplus?: boolean;
    compensationSurplusValue?: string;
    minPower?: string;
    maxPower?: string;
    energyPrice1?: string;
    energyPrice2?: string;
    energyPrice3?: string;
    energyPrice4?: string;
    energyPrice5?: string;
    energyPrice6?: string;
    powerPrice1?: string;
    powerPrice2?: string;
    powerPrice3?: string;
    powerPrice4?: string;
    powerPrice5?: string;
    powerPrice6?: string;
    fixedTermPrice?: string;
  }) {
    this.marketer = rate.marketer;
    this.name = rate.name;
    this.energyType = rate.energyType;
    this.priceType = rate.priceType;
    this.clientTypes = rate.clientTypes;
    this.rateType = rate.rateType;
    this.permanency = rate.permanency;
    this.length = rate.length;
    this.isFullRenewable = rate.isFullRenewable;
    this.compensationSurplus = rate.compensationSurplus;
    this.compensationSurplusValue = rate.compensationSurplusValue;
    this.minPower = rate.minPower;
    this.maxPower = rate.maxPower;
    this.energyPrice1 = rate.energyPrice1;
    this.energyPrice2 = rate.energyPrice2;
    this.energyPrice3 = rate.energyPrice3;
    this.energyPrice4 = rate.energyPrice4;
    this.energyPrice5 = rate.energyPrice5;
    this.energyPrice6 = rate.energyPrice6;
    this.powerPrice1 = rate.powerPrice1;
    this.powerPrice2 = rate.powerPrice2;
    this.powerPrice3 = rate.powerPrice3;
    this.powerPrice4 = rate.powerPrice4;
    this.powerPrice5 = rate.powerPrice5;
    this.powerPrice6 = rate.powerPrice6;
    this.fixedTermPrice = rate.fixedTermPrice;
  }
}
